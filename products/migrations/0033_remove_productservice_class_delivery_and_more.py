# Generated by Django 4.2.1 on 2023-11-20 10:23

from django.db import migrations, models


class Migration(migrations.Migration):
    dependencies = [
        ("products", "0032_classpriceslistpage_private_intro_and_more"),
    ]

    operations = [
        migrations.RemoveField(
            model_name="productservice",
            name="class_delivery",
        ),
        migrations.RemoveField(
            model_name="productservice",
            name="class_num",
        ),
        migrations.RemoveField(
            model_name="productservice",
            name="class_quantity",
        ),
        migrations.RemoveField(
            model_name="productservice",
            name="class_unit",
        ),
        migrations.AddField(
            model_name="productservice",
            name="bookable_online",
            field=models.BooleanField(
                help_text="Can be booked online if applicable",
                null=True,
                verbose_name="Bookable online",
            ),
        ),
        migrations.AddField(
            model_name="productservice",
            name="group_or_one",
            field=models.CharField(
                choices=[
                    ("na", "N/a"),
                    ("one-to-one", "OneToOne,マンツーマン"),
                    ("group", "Group,グループ"),
                ],
                default="na",
                help_text="One-to-one or group if applicable",
                verbose_name="Group or 1-to-1",
            ),
        ),
        migrations.AddField(
            model_name="productservice",
            name="has_onlinenotes",
            field=models.BooleanField(
                help_text="Has onlinenotes if applicable ?",
                null=True,
                verbose_name="Has Online Notes",
            ),
        ),
        migrations.AddField(
            model_name="productservice",
            name="is_inperson",
            field=models.BooleanField(
                blank=True,
                help_text="Is able to be taken in person if applicable?",
                null=True,
                verbose_name="Is Inperson",
            ),
        ),
        migrations.AddField(
            model_name="productservice",
            name="is_online",
            field=models.BooleanField(
                help_text="Is able to be taken online if applicable?",
                null=True,
                verbose_name="Is Online",
            ),
        ),
        migrations.AddField(
            model_name="productservice",
            name="length",
            field=models.PositiveSmallIntegerField(
                blank=True,
                help_text="Length of class or experience if applicable. Example. Number of Minutes or number of words",
                null=True,
                verbose_name="Length",
            ),
        ),
        migrations.AddField(
            model_name="productservice",
            name="length_unit",
            field=models.CharField(
                choices=[
                    ("na", "N/a"),
                    ("minutes", "Minutes,分"),
                    ("words", "Words,単語"),
                ],
                default="na",
                help_text="Required. Unit by which length is measured. Example. Minutes or words",
                verbose_name="Class Length Unit",
            ),
        ),
        migrations.AddField(
            model_name="productservice",
            name="max_num",
            field=models.PositiveSmallIntegerField(
                blank=True,
                help_text="Max Number of people if applicable",
                null=True,
                verbose_name="Max Num People",
            ),
        ),
        migrations.AddField(
            model_name="productservice",
            name="min_num",
            field=models.PositiveSmallIntegerField(
                blank=True,
                help_text="Min Number of people if applicable",
                null=True,
                verbose_name="Min Num People",
            ),
        ),
        migrations.AddField(
            model_name="productservice",
            name="quantity",
            field=models.PositiveSmallIntegerField(
                blank=True,
                help_text="Quantity if applicable (Per Unit) ",
                null=True,
                verbose_name="Quantity",
            ),
        ),
        migrations.AddField(
            model_name="productservice",
            name="quantity_unit",
            field=models.CharField(
                choices=[
                    ("na", "N/a"),
                    ("week", "Week,週"),
                    ("month", "Month,月"),
                    ("year", "Year,年"),
                    ("payment", "Payment,支払"),
                ],
                default="na",
                help_text="Required. Unit by which quantity is measured. Example. Month or Payment",
                verbose_name="Quantity Unit",
            ),
        ),
    ]
